CREATE TABLE IF NOT EXISTS `estoque` (
  `codigo` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `nome` TEXT NOT NULL,
  `quant` INTEGER NOT NULL,
  `preco` FLOAT NOT NULL
 );

 CREATE TABLE IF NOT EXISTS `vendas` (
  `idVenda` INTEGER NOT NULL,
  `codigo` INTEGER NOT NULL,
  `quant` INTEGER NOT NULL,
  `preco` FLOAT NOT NULL,
  PRIMARY KEY (`idVenda`, `codigo`)
);

insert into estoque (nome,quant,preco) values ('Agua              ', 10,1.5);
insert into estoque (nome,quant,preco) values ('Suco              ', 10,3);
insert into estoque (nome,quant,preco) values ('Tesoura           ', 10, 5);
insert into estoque (nome,quant,preco) values ('Caneta            ', 10, 0.5);
insert into estoque (nome,quant,preco) values ('Abajur            ', 5, 25);
insert into estoque (nome,quant,preco) values ('Batmovel          ', 2, 1000000);
insert into estoque (nome,quant,preco) values ('Criptonita        ', 50, 50);
insert into estoque (nome,quant,preco) values ('Esfera do Dragao  ', 7, 600);
insert into estoque (nome,quant,preco) values ('Semente dos Deuses', 20, 2500);
insert into estoque (nome,quant,preco) values ('Pocao             ', 100, 50);
insert into estoque (nome,quant,preco) values ('Super Pocao       ', 50, 200);


SELECT * FROM estoque ;


-- (1) – Nova venda: deve determinar o valor do identificador da venda que será realizada. Para
-- isso, deve-se verificar qual o último código de venda utilizado ou definir o valor da primeira
-- venda da loja como 1.

-- Determinar o último código de venda
SELECT MAX(idVenda) FROM vendas;
-- Se não retornar nulo, então usar o valor retornado - > retornar este valor
-- Senão, retornar apenas o valor 1 -> que será usado para inserir a primeira venda
insert into vendas (idVenda,codigo,quant,preco) values(1,6,1,1000000)
-- (2) 2 – Adicionar ao carrinho:
-- Apresentar a tabela do estoque;
SELECT * FROM estoque;
-- Permitir ao usuário digitar o código do produto, bem como a quantidade que o
-- cliente deseja; 
-- Se o produto existir no estoque:
	SELECT * 
		FROM estoque
		WHERE codigo = 6; 
	-- Então
		-- Se a quantidade solicitada estiver disponível no estoque:
			-- Fazer um SELECT onde o critério de pesquisa (WHERE) verifique SE 
			SELECT from estoque WHERE quant > 1
			-- o valor testado é menor ou igual que o valor do campo quant para
			-- o produto de código já verificado no SELECT anterior
			-- Na sequência - inserir um novo registro em vendas com o valor de
			-- idVenda igual à o último valor de venda MAIS um
			-- SELECIONAR da tabela vendas registro que tenha o mesmo código do 
			-- produto escolhido e que tenha o mesmo número da venda
			insert into vendas (idVenda,codigo,quant,preco) values(1,6,1,1000000)
			-- Inserir os dados necessários na venda em aberto;
			-- Se algum item com esse código já foi inserido na venda
			-- quantidade dever ser incrementada, ao invés de criar outro
			-- item com o mesmo código e o valor do preço em estoque;
			-- Se se não existir esses registros
				-- INSERIR na tabela vendas um novo registro com o valor de idVenda
				-- junto com o código do produto vendido, a quantidade escolhida
			insert into vendas (idVenda,codigo,quant,preco) values(1,6,1,1000000)
			-- Senão ATUALIZAR a linha da tabela vendas que já tem esse produto
				-- com o valor da quantidade vendida somado à quantidade que o 
				-- usuário escolheu antes
			UPDATE vendas SET quant = 2 WHERE codigo=6
			-- Mostrar os dados da venda atual;
			-- selecionar todas as colunas do registro de vendas que tenha o número
			-- de venda anterior  
			-- Retirar a quantidade vendida do estoque;
			-- ATUALIZAR a tabela estoque parao produto escolhido
			UPDATE estoque SET quant = 1 WHERE codigo=6
			-- reduzindo o valor do campo quant na quantidade vendida
			-- Mostrar os dados do estoque atual;
			-- SELECIONAR toda a tabela de estoque
			SELECT * from estoque
		-- Caso contrário, informar ao usuário que a quantidade solicitada não é
		-- suficiente no estoque;
	-- Caso contrário, informar ao usuário que o produto não está cadastrado;

-- 3 - Fechar venda: Exibe todos os dados da venda atual, além de calcular e exibir o valor
-- total da venda.
-- SELECIONAR as linhas de vendas que tenham o código do produto escolhido e o número da
-- venda realizado e mostrar na tela
			SELECT *, idVenda from estoque WHERE idVenda = 1
-- Depois SELECIONAR idVenda e apresentar a SOMA do campo preço para uma venda informada
 
-- 4 - Gerenciar estoque:
-- Apresentar a tabela de estoque para o usuário;
-- SELECT da tabela inteira de estoque
			select * from estoque
-- O usuário deve informar o código de um produto para ser adicionado ao estoque, ou
-- 0 (zero) para incluir um novo produto (não faça o if verificando se o valor é zero,
-- mas verificando se o código existe na tabela). Caso o produto adicionado for novo,
-- ele deve ser cadastrado na tabela estoque. Se o produto já existir na tabela, sua
-- quantidade e preço devem ser atualizados;
-- SE o produto existir, enão ATUALIZAR a quantidade e o preço em estoque
			UPDATE estoque set quant = 3 WHERE codigo=6
-- SENÃO inserir novo produto
			insert into estoque (nome,quant,preco) values ('Caminhão Scania       ', 2, 2500);
-- Apresentar a tabela de estoque atualizada para o usuário.
		SELECT * from estoque 